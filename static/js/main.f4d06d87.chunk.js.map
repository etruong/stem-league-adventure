{"version":3,"sources":["components/Header.jsx","components/ProgressBar.jsx","components/LoginModal.jsx","components/App.js","index.js"],"names":["Header","props","style","color","bgColor","className","name","ProgressBar","backgroundColor","width","percent","LoginModal","useState","adventure","setAdventure","id","setID","user","firebase","database","ref","React","useEffect","off","login","a","open","on","snapshot","userVal","val","minecraft","demigod","animal","set","setUser","setPhase","onChange","event","target","value","setData","type","placeholder","onClick","Modal","setAppElement","App","data","phase","helpModal","setHelpModal","loginModal","setLoginModal","document","getElementById","backgroundImage","overlayClassName","shouldCloseOnOverlayClick","isOpen","onRequestClose","contentLabel","content","dataType","HelpModal","characterImg","incorrect","img","speaker","text","MainContent","solved","setSolved","progress","length","changeFunc","phaseEnd","contentType","Controls","backDisabled","nextDisabled","disabled","AdventureContainer","title","allowFullScreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","src","url","description","response","setReponse","setResponse","EndingContainer","show","setShow","class","gif","alt","CodeContainer","repo","question","toLowerCase","answer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f4d06d87.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = (props) => {\n\n    let style = {\n        color: (props.bgColor === \"light\" ? \"black\" : \"white\")\n    }\n\n    return(\n        <header style={style}>\n            <h1>\n                <span className=\"small\">STEM League Web Development Friday Adventures</span><br />\n                {props.name}\n            </h1>\n            <p>\n                It's a <span className=\"bold\">Friday Fun Day</span>! Test your web development\n                skills in this interactive coding adventure.\n            </p>\n        </header>\n    );\n}","import React from 'react';\n\nexport const ProgressBar = (props) => {\n    const style = {\n        backgroundColor: props.color,\n        width: props.percent + \"%\"\n    }\n\n    return (\n        <div className=\"prog-bar\"><div style={style}>&nbsp;</div></div>\n    );\n}","import React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport minecraft from '../data/minecraft-adventure.json';\nimport demigod from '../data/demigod-adventure.json';\nimport animal from '../data/animal-adventure.json';\n\nexport const LoginModal = (props) => {\n    const [adventure, setAdventure] = useState(\"animal\");\n    const [id, setID] = useState(\"\");\n    let user = firebase.database().ref(\"users/\" + id);\n\n    React.useEffect(() => {\n        return () => {\n            user.off();\n        }\n    }, []);\n\n    const login = async () => {\n        props.open(false);\n        await user.on('value', (snapshot) => {\n            let userVal = snapshot.val();\n            if (!userVal) {\n                userVal = {\n                    id: id,\n                    minecraft: 0,\n                    demigod: 0,\n                    animal: 0\n                }\n                user.set(userVal)\n            }\n            props.setUser(userVal);\n            if (adventure === \"mine\") {\n                props.setPhase(userVal.minecraft);\n            } else if (adventure === \"demi\") {\n                props.setPhase(userVal.demigod);\n            } else if (adventure === \"animal\") {\n                props.setPhase(userVal.animal);\n            }\n        });\n    }\n\n    const changeData = (event) => {\n        setAdventure(event.target.value);\n        if (event.target.value === \"mine\") {\n            props.setData(minecraft);\n        } else if (event.target.value === \"demi\") { \n            props.setData(demigod);\n        } else { // event.target.value === \"animal\"\n            props.setData(animal);\n        }\n    }\n\n    return <>\n        <h1>STEM League Friday Adventure</h1>\n        <p>\n            Welcome to the web development escape room/coding adventure!\n            Open up your Repl.it to complete coding challenges and surpass the challenges\n        </p>\n        <h2>Select your adventure:</h2>\n        <select onChange={changeData} value={adventure}>\n            <option value=\"mine\">Minecraft Adventures</option>\n            <option value=\"demi\">DemiGod Adventures</option>\n            <option value=\"animal\">Animal Crossing Adventures</option>\n        </select>\n        <input value={props.id} onChange={(event) => { setID(event.target.value) }} \n            type=\"text\" placeholder=\"Type your Developer ID here\" />\n        <button className=\"btn\" onClick={login}>Enter</button>\n    </>\n}","import React, { useState } from 'react';\nimport animal from '../data/animal-adventure.json';\nimport Modal from 'react-modal';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport { Header } from './Header';\nimport { ProgressBar } from './ProgressBar';\nimport { LoginModal } from './LoginModal';\n\nModal.setAppElement(\"#root\");\n\nconst App = () => {\n    const [data, setData] = useState(animal);\n    const [user, setUser] = useState(null);\n    const [phase, setPhase] = useState(0);\n    const [helpModal, setHelpModal] = useState(false);\n    const [loginModal, setLoginModal] = useState(true);\n\n    let root = document.getElementById(\"root\");\n    root.style.backgroundImage = \"url('\" + data.backgroundImage + \"')\";\n\n    return (\n        <div id=\"app\" className=\"container\">\n            <Modal\n                overlayClassName=\"overlay-modal\"\n                className=\"login-modal\"\n                shouldCloseOnOverlayClick={false}\n                isOpen={loginModal}\n                onRequestClose={() => { setLoginModal(false) }}\n                contentLabel=\"Login Modal\" \n            >\n                <LoginModal open={setLoginModal} setUser={setUser} setPhase={setPhase} setData={setData}\n                data={data} />\n            </Modal>\n            <Modal\n                overlayClassName=\"overlay-modal\"\n                className=\"login-modal\"\n                isOpen={helpModal}\n                onRequestClose={() => { setHelpModal(false) }}\n                contentLabel=\"Login Modal\"\n            >\n                <HelpModal open={setHelpModal} content={data.content[phase]} />\n            </Modal>\n            <Header name={data.name} bgColor={data.backgroundColor} />\n            {user ? <MainContent \n                dataType={data.id} \n                color={data.color} \n                content={data.content} \n                helpModal={setHelpModal} \n                phase={phase} \n                setPhase={setPhase} \n                user={user} \n                setUser={setUser} /> : <div id=\"loading\">&nbsp;</div>}\n        </div>\n    );\n}\n\nexport default App;\n\nconst HelpModal = (props) => {\n    if (props.content.type !== \"code\") {\n        return null;\n    }\n\n    const characterImg = {\n        backgroundImage: \"url(\\\"\" + props.content.incorrect.img + \"\\\")\"\n    }\n    return <>\n        <div className=\"conversation-container\">\n            <div className=\"character-img\" style={characterImg}>&nbsp;</div>\n            <div className=\"convo\">\n                <h2>{props.content.incorrect.speaker}:</h2>\n                <p>{props.content.incorrect.text}</p>\n            </div>\n        </div>\n    </>\n}\n\n\n\nconst MainContent = (props) => {\n    const [solved, setSolved] = useState(false);\n    const progress = (props.phase + 1) / props.content.length * 100;\n\n    return (\n        <main>\n            <ProgressBar percent={progress} color={props.color} />\n            <AdventureContainer \n                content={props.content[props.phase]} \n                helpModal={props.helpModal}\n                user={props.user}\n                phase={props.phase}\n                solved={solved}\n                setSolved={setSolved}\n                setUser={props.setUser}\n                color={props.color}\n                dataType={props.dataType}\n            />\n            <Controls \n                changeFunc={props.setPhase}\n                phase={props.phase}\n                phaseEnd={props.content.length - 1}\n                user={props.user}\n                solved={solved}\n                setSolved={setSolved}\n                contentType={props.content[props.phase].type}\n                color={props.color}\n            />\n        </main>\n    );\n}\n\nconst Controls = (props) => {\n\n    const backDisabled = props.phase === 0;\n    const backFunc = () => {\n        if (!backDisabled) {\n            props.changeFunc(props.phase - 1);\n        }\n    }\n\n    const nextDisabled = props.phaseEnd === props.phase;\n    const nextFunc = () => {\n        if (!nextDisabled) {\n            props.changeFunc(props.phase + 1);\n            props.setSolved(false);\n        }\n    }\n\n    let style = {\n        backgroundColor: props.color\n    }\n\n    return (\n        <section id=\"control\">\n            <button \n                style={style}\n                className={\"btn \" + (backDisabled ? \"invisible\" : \"\")} \n                onClick={backFunc}>Back</button>\n            <p className=\"small\">Current Developer: {props.user.id}</p>\n            <button \n                style={style}\n                className={\"btn \" + (nextDisabled ? \"invisible\" : \"\")} \n                onClick={nextFunc}\n                disabled={props.contentType === \"code\" && !props.solved}\n            >Next</button>\n        </section>\n    );\n}\n\nconst AdventureContainer = (props) => {\n    let content;\n    if (props.content.type === \"conversation\") {\n\n        const characterImg = {\n            backgroundImage: \"url(\\\"\" + props.content.img + \"\\\")\"\n        }\n\n        content = (\n            <div className=\"conversation-container\">\n                <div className=\"character-img\" style={characterImg}>&nbsp;</div>\n                <div className=\"convo\">\n                    <h2>{props.content.speaker}:</h2>\n                    <p>{props.content.text}</p>\n                </div>\n            </div>\n        );\n    }\n    else if (props.content.type === \"video\") {\n        content = (\n            <div className=\"flex-center\">\n                <iframe title={props.content.id}\n                    allowFullScreen=\"allowFullScreen\"\n                    mozallowfullscreen=\"mozallowFullScreen\" \n                    msallowfullscreen=\"msallowFullScreen\" \n                    oallowfullscreen=\"oallowFullScreen\" \n                    webkitallowfullscreen=\"webkitallowFullScreen\"\n                    src={\"https://www.youtube.com/embed/\" + props.content.url}>\n                </iframe>\n            </div>\n        )\n    }\n    else if (props.content.type === \"image\") {\n        let style = {\n            backgroundImage: (\"url('\" + props.content.src + \"')\"),\n        }\n        content = (\n            <div className=\"flex-center img-container\">\n                {props.content.description !== \"\" ? <p>{props.content.description}</p> : null}\n                <div className=\"adventure-img\" style={style}>&nbsp;</div>\n            </div>\n        );\n    }\n    else if (props.content.type === \"code\") {\n        content = <CodeContainer \n            content={props.content} \n            response={props.response} \n            setReponse={props.setResponse} \n            helpModal={props.helpModal}\n            phase={props.phase}\n            user={props.user}\n            setUser={props.setUser}\n            solved={props.solved}\n            setSolved={props.setSolved}\n            color={props.color}\n            dataType={props.dataType} />\n    } else if (props.content.type === \"end\") {\n        content = <EndingContainer user={props.user} phase={props.phase} content={props.content} dataType={props.dataType} />;\n    }\n\n    return (\n        <section className=\"adventure-content\">\n            {content}\n        </section>\n    );\n}\n\nconst EndingContainer = (props) => {\n    const [show, setShow] = useState(false);\n\n    React.useEffect(() => {\n        let ref = firebase.database().ref(\"complete/\" + props.dataType + \"/\" + props.user.id);\n        ref.on('value', (snapshot) => {\n            let val = snapshot.val();\n            if (val) {\n                setShow(true);\n            }\n        });\n        return () => { ref.off() };\n    }, [props.user.id, props.dataType]);\n\n    const recordCompletion = () => {\n        let ref = firebase.database().ref(\"complete/\" + props.dataType + \"/\" + props.user.id);\n        ref.set(true);\n        let userIndex = firebase.database().ref(\"users/\" + props.user.id + \"/\" + props.dataType);\n        userIndex.set(props.phase);\n    }\n\n    return <div class=\"end-container\">\n        <h2>Congratulations on Completing the Coding Adventure!</h2>\n        <p>Click the button below so we can record your completion!</p>\n        <button onClick={recordCompletion}>Complete Adventure</button>\n        <img className={show ? \"\" : \"hidden\"} src={props.content.gif} alt=\"celebration\" />\n        <p className={show ? \"\" : \"hidden\"}>You did it!</p>\n    </div>\n}\n\nconst CodeContainer = (props) => {\n    const [response, setResponse] = useState(\"\");\n\n    const submitResponse = () => {\n        if (response.toLowerCase() === props.content.answer.toLowerCase()) {\n            props.setSolved(true);\n            let userIndex = firebase.database().ref(\"users/\" + props.user.id + \"/\" + props.dataType);\n            userIndex.set(props.phase);\n        } else {\n            props.helpModal(true);\n        }\n    }\n\n    return <div className=\"code-container\">\n                <h2 className=\"small\">It's Coding Time!</h2>\n                <p>\n                    Complete the following challenge below by navigating to Repl.it and\n                    cloning this repo: <span className=\"bold\">{ props.content.repo }</span> <br />\n                    Code to find the answer to the question below!\n                </p>\n                <p>{props.content.question}</p>\n                <input \n                    type=\"text\" \n                    placeholder=\"Type your answer here\" \n                    value={response}\n                    onChange={(event) => {\n                        setResponse(event.target.value);\n                    }}\n                />\n                <button style={{ backgroundColor: props.color }} onClick={submitResponse}>Submit</button>\n                <br />\n                {props.content.type === \"code\" && props.user[props.dataType] >= props.phase ?\n                <p className=\"small\">\n                    Nice you solved this already! <br />Remember the answer is: {props.content.answer.toLowerCase()}\n                </p> : null\n                }\n            </div>;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/App';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDWOxuPtSMsLKQvEQGO_j5i7JOZ68Rilh8\",\n  authDomain: \"test-a3d7a.firebaseapp.com\",\n  databaseURL: \"https://test-a3d7a.firebaseio.com\",\n  projectId: \"test-a3d7a\",\n  storageBucket: \"test-a3d7a.appspot.com\",\n  messagingSenderId: \"244196474262\",\n  appId: \"1:244196474262:web:93af96d90d1a4a540f71b7\",\n  measurementId: \"G-K13VL9JC97\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}