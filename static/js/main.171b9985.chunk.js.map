{"version":3,"sources":["components/Header.jsx","components/ProgressBar.jsx","components/LoginModal.jsx","components/App.js","index.js"],"names":["Header","props","className","name","ProgressBar","style","width","percent","LoginModal","useState","id","setID","user","firebase","database","ref","React","useEffect","off","login","a","open","on","snapshot","userVal","val","index","passwords","0","set","setUser","setPhase","value","onChange","event","target","type","placeholder","onClick","Modal","setAppElement","data","adventureJSON","App","phase","helpModal","setHelpModal","loginModal","setLoginModal","overlayClassName","shouldCloseOnOverlayClick","isOpen","onRequestClose","contentLabel","content","HelpModal","characterImg","backgroundImage","incorrect","img","speaker","text","MainContent","solved","setSolved","progress","length","snap","changeFunc","phaseEnd","contentType","Controls","backDisabled","nextDisabled","disabled","AdventureContainer","title","allowFullScreen","mozallowfullscreen","msallowfullscreen","oallowfullscreen","webkitallowfullscreen","src","url","description","response","setReponse","setResponse","EndingContainer","show","setShow","class","gif","alt","CodeContainer","repo","question","answer","userIndex","userPass","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.171b9985.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Header = (props) => {\n    return(\n        <header>\n            <h1>\n                <span className=\"small\">STEM League Web Development Friday Adventures</span><br />\n                {props.name}\n            </h1>\n            <p>\n                It's a <span className=\"bold\">Friday Fun Day</span>! Test your web development\n                skills in this interactive coding adventure. <br />Make sure to save the confirmation\n                code at the end so we know you completed the adventure!\n            </p>\n        </header>\n    );\n}","import React from 'react';\n\nexport const ProgressBar = (props) => {\n    const style = {\n        width: props.percent + \"%\"\n    }\n\n    return (\n        <div className=\"prog-bar\"><div style={style}>&nbsp;</div></div>\n    );\n}","import React, { useState } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nexport const LoginModal = (props) => {\n    const [id, setID] = useState(\"\");\n    let user = firebase.database().ref(\"users/\" + id);\n\n    React.useEffect(() => {\n        return () => {\n            user.off();\n        }\n    }, []);\n\n    const login = async () => {\n        props.open(false);\n        await user.on('value', (snapshot) => {\n            let userVal = snapshot.val();\n            if (!userVal) {\n                userVal = {\n                    id: id,\n                    index: 0,\n                    passwords: {\n                        0: \"What is love\"\n                    }\n                }\n                user.set(userVal)\n            }\n            props.setUser(userVal);\n            props.setPhase(userVal.index);\n        });\n    }\n\n    return <>\n        <h1>STEM League Friday Adventure</h1>\n        <h2>Minecraft Adventure</h2>\n        <p>\n            Welcome to the very first web development escape room/coding adventure!<br />\n            Open up your Repl.it to complete coding challenges and surpass the challenges\n        </p>\n        <input value={props.id} onChange={(event) => { setID(event.target.value) }} \n            type=\"text\" placeholder=\"Type your Developer ID here\" />\n        <button className=\"btn\" onClick={login}>Enter</button>\n    </>\n}","import React, { useState } from 'react';\nimport adventureJSON from '../data/adventure.json';\nimport Modal from 'react-modal';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nimport { Header } from './Header';\nimport { ProgressBar } from './ProgressBar';\nimport { LoginModal } from './LoginModal';\n\nModal.setAppElement(\"#root\");\nconst data = adventureJSON;\n\nconst App = () => {\n    const [user, setUser] = useState(null);\n    const [phase, setPhase] = useState(0);\n    const [helpModal, setHelpModal] = useState(false);\n    const [loginModal, setLoginModal] = useState(true);\n\n    return (\n        <div id=\"app\" className=\"container\">\n            <Modal\n                overlayClassName=\"overlay-modal\"\n                className=\"login-modal\"\n                shouldCloseOnOverlayClick={false}\n                isOpen={loginModal}\n                onRequestClose={() => { setLoginModal(false) }}\n                contentLabel=\"Login Modal\"\n            >\n                <LoginModal open={setLoginModal} setUser={setUser} setPhase={setPhase} />\n            </Modal>\n            <Modal\n                overlayClassName=\"overlay-modal\"\n                className=\"login-modal\"\n                isOpen={helpModal}\n                onRequestClose={() => { setHelpModal(false) }}\n                contentLabel=\"Login Modal\"\n            >\n                <HelpModal open={setHelpModal} content={data.content[phase]} />\n            </Modal>\n            <Header name={data.name} />\n            {user ? <MainContent content={data.content} helpModal={setHelpModal} \n                phase={phase} setPhase={setPhase} user={user} setUser={setUser} /> : <div id=\"loading\">&nbsp;</div>}\n        </div>\n    );\n}\n\nexport default App;\n\nconst HelpModal = (props) => {\n    if (props.content.type !== \"code\") {\n        return null;\n    }\n\n    const characterImg = {\n        backgroundImage: \"url(\\\"\" + props.content.incorrect.img + \"\\\")\"\n    }\n    return <>\n        <div className=\"conversation-container\">\n            <div className=\"character-img\" style={characterImg}>&nbsp;</div>\n            <div className=\"convo\">\n                <h2>{props.content.incorrect.speaker}:</h2>\n                <p>{props.content.incorrect.text}</p>\n            </div>\n        </div>\n    </>\n}\n\n\n\nconst MainContent = (props) => {\n    const [solved, setSolved] = useState(false);\n    const progress = (props.phase + 1) / props.content.length * 100;\n\n    React.useEffect(() => {\n        let user = firebase.database().ref(\"users/\" + props.user.id);\n        user.on('value', (snapshot) => {\n            let snap = snapshot.val();\n            props.setUser(snap);\n        });\n\n        return () => {\n            user.off();\n        }\n    }, [props]);\n\n    return (\n        <main>\n            <ProgressBar percent={progress} />\n            <AdventureContainer \n                content={props.content[props.phase]} \n                helpModal={props.helpModal}\n                user={props.user}\n                phase={props.phase}\n                solved={solved}\n                setSolved={setSolved}\n                setUser={props.setUser}\n            />\n            <Controls \n                changeFunc={props.setPhase}\n                phase={props.phase}\n                phaseEnd={props.content.length - 1}\n                user={props.user}\n                solved={solved}\n                setSolved={setSolved}\n                contentType={props.content[props.phase].type}\n            />\n        </main>\n    );\n}\n\nconst Controls = (props) => {\n\n    const backDisabled = props.phase === 0;\n    const backFunc = () => {\n        if (!backDisabled) {\n            props.changeFunc(props.phase - 1);\n        }\n    }\n\n    const nextDisabled = props.phaseEnd === props.phase;\n    const nextFunc = () => {\n        if (!nextDisabled) {\n            props.changeFunc(props.phase + 1);\n            props.setSolved(false);\n        }\n    }\n\n    return (\n        <section id=\"control\">\n            <button \n                className={\"btn \" + (backDisabled ? \"invisible\" : \"\")} \n                onClick={backFunc}>Back</button>\n            <p className=\"small\">Current Developer: {props.user.id}</p>\n            <button \n                className={\"btn \" + (nextDisabled ? \"invisible\" : \"\")} \n                onClick={nextFunc}\n                disabled={props.contentType === \"code\" && !props.solved}\n            >Next</button>\n        </section>\n    );\n}\n\nconst AdventureContainer = (props) => {\n    let content;\n    if (props.content.type === \"conversation\") {\n\n        const characterImg = {\n            backgroundImage: \"url(\\\"\" + props.content.img + \"\\\")\"\n        }\n\n        content = (\n            <div className=\"conversation-container\">\n                <div className=\"character-img\" style={characterImg}>&nbsp;</div>\n                <div className=\"convo\">\n                    <h2>{props.content.speaker}:</h2>\n                    <p>{props.content.text}</p>\n                </div>\n            </div>\n        );\n    }\n    else if (props.content.type === \"video\") {\n        content = (\n            <div className=\"flex-center\">\n                <iframe title={props.content.id}\n                    allowFullScreen=\"allowFullScreen\"\n                    mozallowfullscreen=\"mozallowFullScreen\" \n                    msallowfullscreen=\"msallowFullScreen\" \n                    oallowfullscreen=\"oallowFullScreen\" \n                    webkitallowfullscreen=\"webkitallowFullScreen\"\n                    src={\"https://www.youtube.com/embed/\" + props.content.url}>\n                </iframe>\n            </div>\n        )\n    }\n    else if (props.content.type === \"image\") {\n        let style = {\n            backgroundImage: (\"url('\" + props.content.src + \"')\"),\n        }\n        content = (\n            <div className=\"flex-center img-container\">\n                {props.content.description !== \"\" ? <p>{props.content.description}</p> : null}\n                <div className=\"adventure-img\" style={style}>&nbsp;</div>\n            </div>\n        );\n    }\n    else if (props.content.type === \"code\") {\n        content = <CodeContainer \n            content={props.content} \n            response={props.response} \n            setReponse={props.setResponse} \n            helpModal={props.helpModal}\n            phase={props.phase}\n            user={props.user}\n            setUser={props.setUser}\n            solved={props.solved}\n            setSolved={props.setSolved} />\n    } else if (props.content.type === \"end\") {\n        content = <EndingContainer user={props.user} phase={props.phase} content={props.content} />;\n    }\n\n    return (\n        <section className=\"adventure-content\">\n            {content}\n        </section>\n    );\n}\n\nconst EndingContainer = (props) => {\n    const [show, setShow] = useState(false);\n\n    React.useEffect(() => {\n        let ref = firebase.database().ref(\"complete/\" + props.user.id);\n        ref.on('value', (snapshot) => {\n            let val = snapshot.val();\n            if (val) {\n                setShow(true);\n            }\n        });\n        return () => { ref.off() };\n    }, [props.user.id]);\n\n    const recordCompletion = () => {\n        let ref = firebase.database().ref(\"complete/\" + props.user.id);\n        ref.set(true);\n        let userIndex = firebase.database().ref(\"users/\" + props.user.id + \"/index\");\n        userIndex.set(props.phase);\n    }\n\n    return <div class=\"end-container\">\n        <h2>Congratulations on Completing the Minecraft Coding Adventure!</h2>\n        <p>Click the button below so we can record your completion!</p>\n        <button onClick={recordCompletion}>Complete Adventure</button>\n        <img className={show ? \"\" : \"hidden\"} src={props.content.gif} alt=\"celebration\" />\n        <p className={show ? \"\" : \"hidden\"}>You did it!</p>\n    </div>\n}\n\nconst CodeContainer = (props) => {\n    const [response, setResponse] = useState(\"\");\n\n    const submitResponse = () => {\n        if (response === props.content.answer) {\n            props.setSolved(true);\n            let userIndex = firebase.database().ref(\"users/\" + props.user.id + \"/index\");\n            let userPass = firebase.database().ref(\"users/\" + props.user.id + \"/passwords/\" + props.phase);\n            userIndex.set(props.phase);\n            userPass.set(response);\n        } else {\n            props.helpModal(true);\n        }\n    }\n\n    return <div className=\"code-container\">\n                <h2 className=\"small\">It's Coding Time!</h2>\n                <p>\n                    Complete the following challenge below by navigating to Repl.it and\n                    cloning this repo: <span className=\"bold\">{ props.content.repo }</span> <br />\n                    Code to find the answer to the question below!\n                </p>\n                <p>{props.content.question}</p>\n                <input \n                    type=\"text\" \n                    placeholder=\"Type your answer here\" \n                    value={response}\n                    onChange={(event) => {\n                        setResponse(event.target.value);\n                    }}\n                />\n                <button onClick={submitResponse}>Submit</button>\n                <br />\n                {props.content.type === \"code\" && props.user.passwords[props.phase] === props.content.answer ?\n                <p className=\"small\">\n                    Nice you solved this already! <br />Remember the answer is: {props.content.answer}\n                </p> : null\n                }\n            </div>;\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './components/App';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDWOxuPtSMsLKQvEQGO_j5i7JOZ68Rilh8\",\n  authDomain: \"test-a3d7a.firebaseapp.com\",\n  databaseURL: \"https://test-a3d7a.firebaseio.com\",\n  projectId: \"test-a3d7a\",\n  storageBucket: \"test-a3d7a.appspot.com\",\n  messagingSenderId: \"244196474262\",\n  appId: \"1:244196474262:web:93af96d90d1a4a540f71b7\",\n  measurementId: \"G-K13VL9JC97\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}